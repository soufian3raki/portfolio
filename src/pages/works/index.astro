---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Obtener todos los proyectos
const allWorks = await getCollection('works');

// Ordenar por fecha de completado (más recientes primero)
const sortedWorks = allWorks.sort((a, b) => {
    const dateA = new Date(a.data.completed);
    const dateB = new Date(b.data.completed);
    return dateB.getTime() - dateA.getTime(); // Orden descendente (más reciente primero)
});

// Configuración de paginación
const ITEMS_PER_PAGE = 6;
const totalProjects = sortedWorks.length;
const totalPages = Math.ceil(totalProjects / ITEMS_PER_PAGE);

// Pasar todos los datos al cliente para paginación del lado del cliente
const worksData = sortedWorks.map(work => ({
    id: work.id,
    slug: work.slug,
    title: work.data.title,
    title_es: work.data.title_es,
    description: work.data.description,
    description_es: work.data.description_es,
    image: work.data.image,
    link: work.data.link,
    github: work.data.github,
    technologies: work.data.technologies,
    completed: work.data.completed,
    featured: work.data.featured
}));
---

<Layout 
	title="Portfolio de Proyectos | Desarrollos Web por Soufiane Raki"
	description="Explora mi portfolio de proyectos web desarrollados con React, Node.js, TypeScript y tecnologías modernas. Aplicaciones web, e-commerce, APIs y más desarrollos profesionales."
	keywords="portfolio proyectos web, desarrollos react, aplicaciones node.js, e-commerce, APIs REST, desarrollo full stack, proyectos soufiane raki"
	image="/avatar.png"
>
    <main class="main-content">
        <section class="works">
            <div class="works-header">
            <h1 class="title">Mis Proyectos</h1>
                <div class="projects-counter">
                    <i class="fas fa-code"></i>
                    <span class="counter-text" id="projectsCounter">
                        Cargando proyectos...
                    </span>
                </div>
            </div>
            
            <div id="featuredWorks" class="featured-works" style="display: none;">
                <h2 class="section-title">
                    <i class="fas fa-star"></i>
                    Proyectos Destacados
                </h2>
                <div class="works-grid featured" id="featuredGrid"></div>
                                    </div>
            
            <div id="otherWorks" class="other-works" style="display: none;">
                <h2 class="section-title">
                    <i class="fas fa-folder"></i>
                    Todos los Proyectos
                </h2>
                <div class="works-grid" id="regularGrid"></div>
                                </div>
            
            <div id="paginationContainer" class="pagination-container" style="display: none;">
                <div class="pagination-info">
                    <span class="pagination-text" id="paginationInfo">
                        Página 1 de 1
                    </span>
                </div>
                <nav class="pagination" aria-label="Navegación de páginas" id="paginationNav">
                    <div class="pagination-numbers" id="paginationNumbers"></div>
                </nav>
            </div>
        </section>
    </main>
</Layout>

<style is:global>
    /* Los estilos del main-content ahora están en global.css */

    .works {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    .works-header {
        text-align: center;
        margin-bottom: 3rem;
    }

    .title {
        font-size: 3rem;
        margin-bottom: 1rem;
        color: var(--accent);
    }

    .projects-counter {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        background: var(--background-glass);
        backdrop-filter: var(--glass-blur);
        -webkit-backdrop-filter: var(--glass-blur);
        border: 1px solid var(--border);
        border-radius: 50px;
        padding: 0.75rem 1.5rem;
        color: var(--text-secondary);
        font-size: 0.9rem;
        box-shadow: var(--glass-shadow);
    }

    .projects-counter i {
        color: var(--accent);
    }

    .section-title {
        font-size: 2rem;
        color: var(--text);
        margin-bottom: 2rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .section-title i {
        color: var(--accent);
    }

    .works-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        margin-bottom: 4rem;
    }

    .works-grid.featured {
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    }

    .work-card {
        background: var(--background-glass);
        backdrop-filter: var(--glass-blur);
        -webkit-backdrop-filter: var(--glass-blur);
        border: 1px solid var(--border);
        border-radius: 20px;
        overflow: hidden;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: var(--glass-shadow);
        position: relative;
    }

    .work-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 1px;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    }

    .work-card:hover {
        transform: translateY(-8px) scale(1.02);
        background: var(--background-glass-hover);
        box-shadow: 
            var(--glass-shadow),
            0 0 40px var(--accent-glow);
        border-color: var(--border-glow);
    }

    .work-image {
        position: relative;
        width: 100%;
        height: 200px;
        overflow: hidden;
    }

    .work-card.featured .work-image {
        height: 300px;
    }

    .work-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .work-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 122, 255, 0.9);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .work-card:hover .work-overlay {
        opacity: 1;
    }

    .work-links {
        display: flex;
        gap: 1rem;
    }

    .work-link {
        background: white;
        color: var(--accent);
        padding: 0.5rem 1rem;
        border-radius: 12px;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 500;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .work-link:hover {
        transform: scale(1.05);
        box-shadow: 0 8px 30px rgba(0, 122, 255, 0.3);
    }

    .work-content {
        padding: 1.5rem;
    }

    .work-title {
        font-size: 1.5rem;
        color: var(--text);
        margin-bottom: 0.5rem;
    }

    .work-description {
        color: var(--text-muted);
        margin-bottom: 1rem;
        line-height: 1.6;
    }

    .work-technologies {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }

    .tech-tag {
        background: var(--accent-light);
        color: var(--accent);
        padding: 0.25rem 0.75rem;
        border-radius: 999px;
        font-size: 0.875rem;
        border: 1px solid var(--accent-glow);
    }

    .work-date {
        color: var(--text-secondary);
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .work-date i {
        color: var(--accent);
    }

    /* Estilos de Paginación */
    .pagination-container {
        margin-top: 4rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
    }

    .pagination-info {
        text-align: center;
    }

    .pagination-text {
        color: var(--text-secondary);
        font-size: 0.9rem;
        background: var(--background-glass);
        backdrop-filter: var(--glass-blur);
        -webkit-backdrop-filter: var(--glass-blur);
        border: 1px solid var(--border);
        border-radius: 20px;
        padding: 0.5rem 1rem;
        box-shadow: var(--glass-shadow);
    }

    .pagination {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background: var(--background-glass);
        backdrop-filter: var(--glass-blur);
        -webkit-backdrop-filter: var(--glass-blur);
        border: 1px solid var(--border);
        border-radius: 50px;
        padding: 0.5rem;
        box-shadow: var(--glass-shadow);
    }

    .pagination-btn {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1rem;
        background: transparent;
        color: var(--text);
        text-decoration: none;
        border-radius: 25px;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        font-weight: 500;
        border: 1px solid transparent;
    }

    .pagination-btn:hover {
        background: var(--accent-light);
        color: var(--accent);
        border-color: var(--accent-glow);
        transform: translateY(-2px);
    }

    .pagination-numbers {
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

    .pagination-number {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        background: transparent;
        color: var(--text);
        text-decoration: none;
        border-radius: 50%;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        font-weight: 500;
        border: 1px solid transparent;
    }

    .pagination-number:hover {
        background: var(--accent-light);
        color: var(--accent);
        border-color: var(--accent-glow);
        transform: scale(1.1);
    }

    .pagination-number.active {
        background: var(--accent);
        color: white;
        border-color: var(--accent);
        box-shadow: 0 0 20px var(--accent-glow);
    }

    .pagination-ellipsis {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        color: var(--text-secondary);
        font-weight: bold;
    }

    @media (max-width: 768px) {
        /* El margin-left se maneja en global.css */

        .works {
            padding: 1rem;
            padding-top: 3rem;
        }

        .title {
            font-size: 2rem;
            margin-top: 1rem;
            margin-bottom: 1rem;
            color: var(--accent);
            text-align: center;
        }

        .section-title {
            font-size: 1.5rem;
        }

        .works-grid.featured {
            grid-template-columns: 1fr;
        }

        .pagination {
            flex-wrap: wrap;
            justify-content: center;
            gap: 0.25rem;
        }

        .pagination-btn {
            padding: 0.5rem 0.75rem;
            font-size: 0.875rem;
        }

        .pagination-number {
            width: 35px;
            height: 35px;
            font-size: 0.875rem;
        }

        .pagination-ellipsis {
            width: 35px;
            height: 35px;
        }
    }
</style>

<script define:vars={{ worksDataJSON: JSON.stringify(worksData) }}>
    // Datos de proyectos desde el servidor
    const projectsData = JSON.parse(worksDataJSON);
    const ITEMS_PER_PAGE = 6;
    let currentPage = 1;
    let totalPages = Math.ceil(projectsData.length / ITEMS_PER_PAGE);

    // Mapeo de tecnologías a iconos
    const techIcons = {
        'React': 'fab fa-react',
        'Vue.js': 'fab fa-vuejs',
        'Angular': 'fab fa-angular',
        'Node.js': 'fab fa-node-js',
        'TypeScript': 'fab fa-js-square',
        'JavaScript': 'fab fa-js-square',
        'Python': 'fab fa-python',
        'Java': 'fab fa-java',
        'PHP': 'fab fa-php',
        'MongoDB': 'fas fa-database',
        'PostgreSQL': 'fas fa-database',
        'MySQL': 'fas fa-database',
        'Redis': 'fas fa-database',
        'Docker': 'fab fa-docker',
        'AWS': 'fab fa-aws',
        'Firebase': 'fab fa-google',
        'Stripe': 'fab fa-stripe',
        'Git': 'fab fa-git-alt',
        'GitHub': 'fab fa-github',
        'CSS3': 'fab fa-css3-alt',
        'HTML5': 'fab fa-html5',
        'Sass': 'fab fa-sass',
        'Bootstrap': 'fab fa-bootstrap',
        'Tailwind CSS': 'fab fa-css3-alt',
        'Astro': 'fas fa-rocket',
        'Next.js': 'fab fa-react',
        'Express': 'fab fa-node-js',
        'Socket.io': 'fas fa-plug',
        'Chart.js': 'fas fa-chart-line',
        'WebSocket': 'fas fa-wifi',
        'OpenAI API': 'fas fa-robot',
        'Redux': 'fab fa-react',
        'React Native': 'fab fa-react',
        'Expo': 'fas fa-mobile-alt',
        'Prisma': 'fas fa-database',
        'NestJS': 'fab fa-node-js',
        'Solidity': 'fab fa-ethereum',
        'Ethereum': 'fab fa-ethereum',
        'IPFS': 'fas fa-network-wired',
        'MetaMask': 'fab fa-ethereum',
        'InfluxDB': 'fas fa-database',
        'Grafana': 'fas fa-chart-area',
        'MQTT': 'fas fa-satellite-dish',
        'Vite': 'fas fa-bolt',
        'QR Code Library': 'fas fa-qrcode'
    };

    // Función para obtener icono de tecnología
    function getTechIcon(tech) {
        return techIcons[tech] || 'fas fa-code';
    }

    // Función para crear tag de tecnología
    function createTechTag(tech) {
        const icon = getTechIcon(tech);
        return '<span class="tech-tag"><i class="' + icon + '"></i> ' + tech + '</span>';
    }

    // Función para crear HTML de un proyecto
    function createWorkCard(work) {
        const isFeatured = work.featured;
        const cardClass = isFeatured ? 'work-card featured' : 'work-card';
        
        const links = [];
        links.push('<a href="/works/' + work.slug + '" class="work-link"><i class="fas fa-eye"></i><span class="view-project-text">Ver Proyecto</span></a>');
        
        if (work.link) {
            links.push('<a href="' + work.link + '" class="work-link" target="_blank" rel="noopener noreferrer"><i class="fas fa-external-link-alt"></i><span class="visit-site-text">Visitar Sitio</span></a>');
        }
        
        if (work.github) {
            links.push('<a href="' + work.github + '" class="work-link" target="_blank" rel="noopener noreferrer"><i class="fab fa-github"></i><span class="view-code-text">Ver Código</span></a>');
        }

        const technologies = work.technologies.map(tech => createTechTag(tech)).join('');

        return '<article class="' + cardClass + '" data-work-title="' + work.title + '" data-work-title-es="' + (work.title_es || work.title) + '" data-work-description="' + work.description + '" data-work-description-es="' + (work.description_es || work.description) + '">' +
            '<div class="work-image">' +
                '<img src="' + work.image + '" alt="' + work.title + '" />' +
                '<div class="work-overlay">' +
                    '<div class="work-links">' + links.join('') + '</div>' +
                '</div>' +
            '</div>' +
            '<div class="work-content">' +
                '<h3 class="work-title">' + (work.title_es || work.title) + '</h3>' +
                '<p class="work-description">' + (work.description_es || work.description) + '</p>' +
                '<div class="work-technologies">' + technologies + '</div>' +
                '<time class="work-date"><i class="fas fa-calendar"></i>' + work.completed + '</time>' +
            '</div>' +
        '</article>';
    }

    // Función para renderizar proyectos
    function renderProjects() {
        const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;
        const endIndex = startIndex + ITEMS_PER_PAGE;
        const currentWorks = projectsData.slice(startIndex, endIndex);
        
        const featuredWorks = currentWorks.filter(work => work.featured);
        const regularWorks = currentWorks.filter(work => !work.featured);

        // Actualizar contador
        const counterElement = document.getElementById('projectsCounter');
        if (counterElement) {
            counterElement.textContent = 'Mostrando ' + currentWorks.length + ' de ' + projectsData.length + ' proyectos';
        }

        // Renderizar proyectos destacados
        const featuredContainer = document.getElementById('featuredWorks');
        const featuredGrid = document.getElementById('featuredGrid');
        
        if (featuredWorks.length > 0 && featuredContainer && featuredGrid) {
            featuredContainer.style.display = 'block';
            featuredGrid.innerHTML = featuredWorks.map(createWorkCard).join('');
        } else if (featuredContainer) {
            featuredContainer.style.display = 'none';
        }

        // Renderizar otros proyectos
        const otherContainer = document.getElementById('otherWorks');
        const regularGrid = document.getElementById('regularGrid');
        
        if (regularWorks.length > 0 && otherContainer && regularGrid) {
            otherContainer.style.display = 'block';
            regularGrid.innerHTML = regularWorks.map(createWorkCard).join('');
        } else if (otherContainer) {
            otherContainer.style.display = 'none';
        }

        // Actualizar paginación
        updatePagination();
    }

    // Función para actualizar paginación
    function updatePagination() {
        const paginationContainer = document.getElementById('paginationContainer');
        const paginationInfo = document.getElementById('paginationInfo');
        const paginationNumbers = document.getElementById('paginationNumbers');

        if (totalPages > 1 && paginationContainer && paginationInfo && paginationNumbers) {
            paginationContainer.style.display = 'flex';
            paginationInfo.textContent = 'Página ' + currentPage + ' de ' + totalPages;
            
            let paginationHTML = '';
            
            // Botón anterior
            if (currentPage > 1) {
                paginationHTML += '<a href="#" class="pagination-btn prev" onclick="goToPage(' + (currentPage - 1) + ')" aria-label="Página anterior"><i class="fas fa-chevron-left"></i><span>Anterior</span></a>';
            }
            
            // Números de página
            for (let i = 1; i <= totalPages; i++) {
                const activeClass = i === currentPage ? 'active' : '';
                paginationHTML += '<a href="#" class="pagination-number ' + activeClass + '" onclick="goToPage(' + i + ')" aria-label="Página ' + i + '">' + i + '</a>';
            }
            
            // Botón siguiente
            if (currentPage < totalPages) {
                paginationHTML += '<a href="#" class="pagination-btn next" onclick="goToPage(' + (currentPage + 1) + ')" aria-label="Página siguiente"><span>Siguiente</span><i class="fas fa-chevron-right"></i></a>';
            }
            
            paginationNumbers.innerHTML = paginationHTML;
        } else if (paginationContainer) {
            paginationContainer.style.display = 'none';
        }
    }

    // Función para ir a una página específica
    function goToPage(page) {
        if (page >= 1 && page <= totalPages) {
            currentPage = page;
            renderProjects();
            
            // Scroll suave hacia arriba
            const worksElement = document.querySelector('.works');
            if (worksElement) {
                worksElement.scrollIntoView({ 
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        }
    }

    // Inicializar cuando el DOM esté listo
    document.addEventListener('DOMContentLoaded', function() {
        renderProjects();
    });

    // Hacer las funciones globales para los onclick
    window.goToPage = goToPage;
</script> 